C51 COMPILER V9.60.7.0   PROJETOEMC                                                        05/22/2025 12:07:53 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE PROJETOEMC
OBJECT MODULE PLACED IN .\Objects\ProjetoEmC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ProjetoEmC.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\ProjetoEmC.lst) TABS(2) OBJECT(.\Objects\ProjetoEmC.obj)

line level    source

   1          #include <reg51.h>
   2          
   3          #define fimTempo 60000  // para so fazer operacoes de segundo a segundo
   4          
   5          //Pins P1
   6          sbit ledVerde = P1^0; //pino do led verde
   7          sbit ledVermelho = P1^1; //pino do led vermelho
   8          sbit ledAmarelo = P1^2; //pino do led amarelo
   9          sbit barreira = P1^3; //pino da barreira
  10          sbit sensor = P1^4; //pino do sensor
  11          
  12          //Pins P2
  13          sbit segmentoA = P2^0; //pino do servo A
  14          sbit segmentoB = P2^1; //pino do servo B
  15          sbit segmentoC = P2^2; //pino do servo C
  16          sbit segmentoD = P2^3; //pino do servo D
  17          
  18          //constantes
  19          bit botao = 0; //se o botao estiver a 0 entao e uma entrada se estiver a 1 e uma saida
  20          bit pressionado = 0; //para confirmar se o botao foi pressionado
  21          bit passouCarro = 0; //confirmar se passou o carro
  22          
  23          unsigned int conta = 0; //para ajudar a contar 1 segundo
  24          unsigned int contaSegundo = 0; //contador do timer a cada 1s
  25          unsigned char Leds; //Leds
  26          
  27          void Init(void){
  28   1          //configuracao Registo IE
  29   1          EA = 1; //habilita interrupcao global
  30   1          ET0 = 1; //habilita interrupcao do timer 0
  31   1          EX0 = 1; //habilita interrupcao externa 0
  32   1          EX1 = 1; //habilita interrupcao externa 1
  33   1      
  34   1          //configuracao Registo TMOD
  35   1          TMOD &= 0xF0; // limpa os 4 bits do timer 0 (8 bits -auto reload)
  36   1          TMOD |= 0x02; //modo 2 do timer 0
  37   1      
  38   1          //configuracao Timer 0
  39   1          TR0 = 1; //inicia o timer 0
  40   1          IT0 = 1;//interrupcao esterna ativa a falling edge
  41   1      
  42   1          Leds = 0x00;
  43   1          P0 = Leds;
  44   1        
  45   1          ledVerde = 0; //led verde ligado
  46   1          ledVermelho = 1; //led vermelho desligado
  47   1          ledAmarelo = 1; //led amarelo desligado
  48   1          barreira = 0;//a barreira comeca para baixo
  49   1          sensor = 0;//inicializa o sensor a 0
  50   1          
  51   1          //comecar com o display de 7 segmentos a 9
  52   1          segmentoA = 0;
  53   1          segmentoB = 0;
  54   1          segmentoC = 0;
C51 COMPILER V9.60.7.0   PROJETOEMC                                                        05/22/2025 12:07:53 PAGE 2   

  55   1          segmentoD = 1; 
  56   1      }
  57          
  58          //interrupcao externa 0
  59          void External0_ISR(void) interrupt 0{
  60   1          botao = 0; //assinala que o botao para entrar foi pressionado
  61   1          pressionado = 1;//foi pressionado
  62   1      }
  63          
  64          //interrupcao externa 1
  65          void External1_ISR(void) interrupt 2{
  66   1          botao = 1; //assinala que o botao para sair foi pressionado
  67   1          pressionado = 1;//foi presionado
  68   1      }
  69          
  70          //interrupcao tempo a cada segundo
  71          void Timer0_ISR(void) interrupt 1{
  72   1          conta ++;
  73   1      }
  74          
  75          void display(void){
  76   1        switch (Leds){
  77   2          case 255:
  78   2              segmentoA = 0;
  79   2              segmentoB = 0;
  80   2              segmentoC = 0;
  81   2              segmentoD = 0;
  82   2              break;
  83   2          case 127:
  84   2              segmentoA = 1;
  85   2              segmentoB = 0;
  86   2              segmentoC = 0;
  87   2              segmentoD = 0;
  88   2              break;
  89   2          case 63:
  90   2              segmentoA = 0;
  91   2              segmentoB = 1;
  92   2              segmentoC = 0;
  93   2              segmentoD = 0;
  94   2              break;
  95   2          case 31:
  96   2              segmentoA = 1;
  97   2              segmentoB = 1;
  98   2              segmentoC = 0;
  99   2              segmentoD = 0;
 100   2              break;
 101   2          case 15:
 102   2              segmentoA = 0;
 103   2              segmentoB = 0;
 104   2              segmentoC = 1;
 105   2              segmentoD = 0;
 106   2              break;
 107   2          case 7:
 108   2              segmentoA = 1;
 109   2              segmentoB = 0;
 110   2              segmentoC = 1;
 111   2              segmentoD = 0;
 112   2              break;
 113   2          case 3:
 114   2              segmentoA = 0;
 115   2              segmentoB = 1;
 116   2              segmentoC = 1;
C51 COMPILER V9.60.7.0   PROJETOEMC                                                        05/22/2025 12:07:53 PAGE 3   

 117   2              segmentoD = 0;
 118   2              break;
 119   2          case 1:
 120   2              segmentoA = 1;
 121   2              segmentoB = 1;
 122   2              segmentoC = 1;
 123   2              segmentoD = 0;
 124   2              break;
 125   2          case 0:
 126   2              segmentoA = 0;
 127   2              segmentoB = 0;
 128   2              segmentoC = 0;
 129   2              segmentoD = 1;
 130   2              break;
 131   2          default:
 132   2              break;
 133   2          }
 134   1      }
 135          
 136          void leSensor(){
 137   1          if (sensor == 1){
 138   2              passouCarro = 1;
 139   2          }
 140   1      }
 141          
 142          void main(void){
 143   1          //inicializacoes
 144   1        Init();
 145   1          while (1){ //loop inifinito
 146   2              display();
 147   2              leSensor();
 148   2              if (conta == fimTempo){
 149   3                  conta = 0; //volta a contar
 150   3                  if (pressionado){    
 151   4                      contaSegundo ++; //passou 1 segundo
 152   4                      if (segmentoA || segmentoB || segmentoC || segmentoD || botao ){ //se tiver lugares ou se 
             -for para sair
 153   5                          ledVerde = 0; //ativa o verde
 154   5                          barreira = 1;//levanta a barreira
 155   5                          ledAmarelo = ~ledAmarelo;//fica intermitente
 156   5                          if (contaSegundo >= 10){//espera ate ser maior que 10 segundos 
 157   6                              if (passouCarro){
 158   7                                  barreira = 0; //baixa a barreira  
 159   7                                  pressionado = 0; //volta a colocar o botao de passou a 0
 160   7                                  contaSegundo = 0; //reseta o timer    
 161   7                                  sensor = 0; //reseta o sensor 
 162   7                                  ledAmarelo = 1; //desliga o led amareleo              
 163   7                                  if (botao){//se for para entrar 
 164   8                                      Leds = (Leds >> 1);//deslocar para a direita
 165   8                                      P0 = Leds;  
 166   8                                  }
 167   7                                  else{//se for para sair    
 168   8                                      Leds = (Leds << 1);//deslocar para a esquerda
 169   8                                      Leds ++; //incrementa 1 nos lugares
 170   8                                      P0 = Leds;
 171   8                                  }
 172   7                              }
 173   6                          } 
 174   5                      }else{
 175   5                          ledVermelho = 0;//ativa o led vermelho
 176   5                      }
 177   4                  }
C51 COMPILER V9.60.7.0   PROJETOEMC                                                        05/22/2025 12:07:53 PAGE 4   

 178   3              
 179   3              }
 180   2          }
 181   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    285    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
